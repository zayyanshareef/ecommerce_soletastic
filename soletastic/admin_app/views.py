from django.shortcuts import render,HttpResponse,redirect
from django.contrib.auth.models import User
from django.contrib.auth import authenticate,login,logout
from django.contrib import messages
from .models import *
from .views import *
from django.http import HttpResponseRedirect
from django.contrib.auth.decorators  import user_passes_test
#This decorator prevents caching of the response generated by the view.
from django.views.decorators.cache import never_cache,cache_control
from django.contrib.auth.decorators import login_required

# Create your views here.

            # ........... User Priventing Authentication................#
def admin_required(view_func):
    actual_decorator =user_passes_test(
        lambda a:a.is_authenticated and a.is_staff,
        login_url='admin_login'
    )
    return actual_decorator(view_func)

               # ...........End  User Priventing Authentication................
    
              #.......................Admin Authentication.................. 
@never_cache
def Admin(request):
    
    if 'email_admin' in request.session:
        return redirect("admin_dashboard")
    
    if request.method == "POST":
        email = request.POST.get("email")
        password = request.POST.get("password")
        
        user = authenticate(email=email, password=password)
        
        if user is not None and user.is_staff:
            login(request, user)
            request.session['email_admin'] = email
            return redirect("admin_dashboard")
        else:
            messages.error(request, "Email or Password mismatch")
            return render(request, "Admin/admin_login.html")
        
    return render(request, "Admin/admin_login.html")

#.....................End admin Authentication.............................







        